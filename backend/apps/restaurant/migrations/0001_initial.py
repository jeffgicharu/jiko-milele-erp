# Generated by Django 5.0.14 on 2025-08-18 11:55

import apps.restaurant.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(help_text='Kenyan phone number format: +254XXXXXXXXX', max_length=20, unique=True, validators=[apps.restaurant.validators.validate_kenyan_phone_number])),
                ('name', models.CharField(blank=True, help_text='Customer name for personalized service', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='For digital receipts and marketing', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Account creation timestamp')),
                ('loyalty_points', models.IntegerField(default=0, help_text='Points accumulated through visits', validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('last_visit_date', models.DateField(blank=True, help_text='Most recent visit tracking', null=True)),
                ('total_visits', models.IntegerField(default=0, help_text='Lifetime visit counter', validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('dietary_preferences', models.TextField(blank=True, help_text='Allergies, vegetarian preferences, etc.')),
                ('notes', models.TextField(blank=True, help_text='Staff notes about customer preferences')),
            ],
            options={
                'db_table': 'customers',
                'ordering': ['-last_visit_date'],
                'indexes': [models.Index(fields=['phone_number'], name='customers_phone_n_7d2329_idx'), models.Index(fields=['last_visit_date'], name='customers_last_vi_cfb950_idx'), models.Index(fields=['loyalty_points'], name='customers_loyalty_e7c68a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.CharField(help_text='Unique staff identifier', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Full employee name', max_length=100)),
                ('role', models.CharField(choices=[('general_manager', 'General Manager'), ('shift_supervisor', 'Shift Supervisor'), ('head_chef', 'Head Chef'), ('sous_chef', 'Sous Chef'), ('line_cook', 'Line Cook'), ('server', 'Server'), ('host', 'Host'), ('bartender', 'Bartender'), ('busser', 'Busser')], help_text='Job position', max_length=50)),
                ('phone_number', models.CharField(help_text='Contact information', max_length=20, validators=[apps.restaurant.validators.validate_kenyan_phone_number])),
                ('email', models.EmailField(blank=True, help_text='Optional email contact', max_length=254)),
                ('hire_date', models.DateField(help_text='Employment start date', validators=[apps.restaurant.validators.validate_future_date])),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Hourly wage rate', max_digits=6, null=True, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('is_active', models.BooleanField(default=True, help_text='Current employment status')),
                ('permissions', models.TextField(blank=True, help_text='JSON storage for custom permissions')),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact name', max_length=100)),
                ('emergency_phone', models.CharField(blank=True, help_text='Emergency contact number', max_length=20, validators=[apps.restaurant.validators.validate_kenyan_phone_number])),
            ],
            options={
                'verbose_name_plural': 'Staff',
                'db_table': 'staff',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['employee_number'], name='staff_employe_e7f2e6_idx'), models.Index(fields=['role'], name='staff_role_a521aa_idx'), models.Index(fields=['is_active'], name='staff_is_acti_e9a75c_idx'), models.Index(fields=['hire_date'], name='staff_hire_da_2f4ea5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Supplier business name', max_length=100, unique=True)),
                ('contact_person', models.CharField(blank=True, help_text='Primary contact name', max_length=100)),
                ('phone_number', models.CharField(help_text='Primary contact number', max_length=20, validators=[apps.restaurant.validators.validate_kenyan_phone_number])),
                ('email', models.EmailField(blank=True, help_text='Email contact', max_length=254)),
                ('address', models.TextField(blank=True, help_text='Physical address')),
                ('payment_terms', models.CharField(blank=True, help_text="e.g., 'Net 30', 'Cash on Delivery'", max_length=50)),
                ('delivery_schedule', models.CharField(blank=True, help_text="e.g., 'Monday/Wednesday/Friday'", max_length=100)),
                ('minimum_order', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum order amount', max_digits=10, null=True, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('delivery_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Delivery fee amount', max_digits=8, null=True, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('quality_rating', models.DecimalField(decimal_places=2, default=5.0, help_text='Quality rating from 1.0 to 5.0', max_digits=3, validators=[apps.restaurant.validators.validate_quality_rating])),
                ('is_active', models.BooleanField(default=True, help_text='Current vendor status')),
                ('notes', models.TextField(blank=True, help_text='Additional supplier information')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'suppliers',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='suppliers_name_ed482a_idx'), models.Index(fields=['is_active'], name='suppliers_is_acti_a163b0_idx'), models.Index(fields=['quality_rating'], name='suppliers_quality_4ec2bd_idx')],
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.CharField(help_text="Display identifier (e.g., 'T1', 'BAR2')", max_length=10, unique=True)),
                ('capacity', models.PositiveIntegerField(help_text='Number of seats at table')),
                ('section', models.CharField(blank=True, help_text="Area designation (e.g., 'Main Dining', 'Bar Area')", max_length=50)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('reserved', 'Reserved'), ('cleaning', 'Cleaning'), ('out_of_order', 'Out of Order')], default='available', help_text='Current table status', max_length=20)),
                ('x_coordinate', models.DecimalField(blank=True, decimal_places=2, help_text='X coordinate for floor plan interface', max_digits=5, null=True)),
                ('y_coordinate', models.DecimalField(blank=True, decimal_places=2, help_text='Y coordinate for floor plan interface', max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='For temporarily disabling tables')),
            ],
            options={
                'db_table': 'tables',
                'ordering': ['table_number'],
                'indexes': [models.Index(fields=['table_number'], name='tables_table_n_ec0f83_idx'), models.Index(fields=['status'], name='tables_status_cabc1b_idx'), models.Index(fields=['is_active'], name='tables_is_acti_2c9e88_idx'), models.Index(fields=['section'], name='tables_section_c100cf_idx')],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingredient name', max_length=100)),
                ('category', models.CharField(choices=[('protein', 'Protein'), ('vegetables', 'Vegetables'), ('grains', 'Grains'), ('dairy', 'Dairy'), ('spices', 'Spices'), ('beverages', 'Beverages'), ('dry_goods', 'Dry Goods')], help_text='Ingredient category', max_length=50)),
                ('unit_of_measure', models.CharField(choices=[('kg', 'Kilograms'), ('grams', 'Grams'), ('liters', 'Liters'), ('ml', 'Milliliters'), ('pieces', 'Pieces'), ('cases', 'Cases')], help_text='Unit of measurement', max_length=20)),
                ('current_stock', models.DecimalField(decimal_places=3, default=0, help_text='Current stock level', max_digits=10, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('minimum_stock', models.DecimalField(decimal_places=3, help_text='Reorder point', max_digits=10, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=3, help_text='Maximum stock level', max_digits=10, null=True, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('cost_per_unit', models.DecimalField(decimal_places=4, help_text='Cost per unit', max_digits=8, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('storage_location', models.CharField(choices=[('dry_storage', 'Dry Storage'), ('walk_in_cooler', 'Walk-in Cooler'), ('freezer', 'Freezer'), ('bar', 'Bar'), ('prep_area', 'Prep Area')], help_text='Storage location', max_length=50)),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, help_text='Shelf life in days for perishables', null=True)),
                ('reorder_point', models.DecimalField(blank=True, decimal_places=3, help_text='Automatic reorder point', max_digits=10, null=True, validators=[apps.restaurant.validators.validate_positive_decimal])),
                ('is_perishable', models.BooleanField(default=False, help_text='Whether item is perishable')),
                ('allergen_info', models.TextField(blank=True, help_text='Allergen warnings')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(help_text='Primary supplier', on_delete=django.db.models.deletion.CASCADE, to='restaurant.supplier')),
            ],
            options={
                'db_table': 'ingredients',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='ingredients_name_9f76a2_idx'), models.Index(fields=['category'], name='ingredients_categor_ed8c56_idx'), models.Index(fields=['current_stock'], name='ingredients_current_f16587_idx'), models.Index(fields=['minimum_stock'], name='ingredients_minimum_64b879_idx'), models.Index(fields=['supplier'], name='ingredients_supplie_3bdb93_idx'), models.Index(fields=['is_perishable'], name='ingredients_is_peri_013693_idx')],
            },
        ),
    ]
